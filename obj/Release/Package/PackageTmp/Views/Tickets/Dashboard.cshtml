@using Microsoft.AspNet.Identity;
@using BugTracker.Models
@using BugTracker.Helpers
@model BugTracker.Models.Ticket

<style>
    .btnPad {
        margin-bottom: 20px
    }
</style>

@{
    ViewBag.Title = "Dashboard";
}

@{
    var ticketHelper = new TicketHelper();

    ApplicationDbContext db = new ApplicationDbContext();
    var id = User.Identity.GetUserId();
    var user = db.Users.Find(id);
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Kerry Peay's Bug Tracker</title>

    <!-- Custom fonts for this template -->
    <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="~vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="~/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="~/css/datatables.min.css" rel="stylesheet" />

    <style>
        div.a {
            font-size: 120%;
        }
    </style>

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="index.html">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-laugh-wink"></i>
                </div>
                @if (User.IsInRole("Administrator"))
                {
                    <div class="sidebar-brand-text mx-3"> Kerry Peay's Bug Tracker - Admin </div>
                }
                else
                {
                    <div class="sidebar-brand-text mx-3"> Kerry Peay's Bug Tracker </div>
                }
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Home")">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapsePages2" aria-expanded="true" aria-controls="collapsePages2">
                    <i class="fas fa-fw fa-folder"></i>
                    @if ((User.IsInRole("Administrator")) || (User.IsInRole("Project Manager")))
                    {
                        <span>Current Tasks</span>
                    }
                    else
                    {
                        <span>Current Tickets</span>
                    }
                </a>
                <div id="collapsePages2" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <!--<h6 class="collapse-header">Login Screens:</h6>-->

                        @if (User.IsInRole("Administrator") || (User.IsInRole("Project Manager")))
                        {
                            <a class="collapse-item" href="@Url.Action("Index", "Projects")">View All Projects</a>
                        }
                        <a class="collapse-item" href="@Url.Action("Index", "Tickets")">View All Tickets</a>
                        <!--<a class="collapse-item" href="Url.Action("ChangePassword", "Manage")">Change Password</a>-->
                        @if (User.IsInRole("Administrator"))
                        {
                            <a class="collapse-item" href="@Url.Action("UserIndex", "Admin")">Manage Users</a>
                        }
                        <div class="collapse-divider"></div>
                        <!--<a class="collapse-item" href="404.html">404 Page</a>-->
                        <!--<a class="collapse-item" href="blank.html">Blank Page</a>-->
                    </div>
                </div>
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapsePages" aria-expanded="true" aria-controls="collapsePages">
                    <i class="fas fa-fw fa-folder"></i>
                    <span>My Stuff</span>
                </a>
                <div id="collapsePages" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <!--<h6 class="collapse-header">Login Screens:</h6>-->
                        <a class="collapse-item" href="@Url.Action("MyProjects", "Projects")">My Projects</a>
                        @if (User.IsInRole("Developer") || (User.IsInRole("Project Manager") || (User.IsInRole("Submitter"))))
                        {<a class="collapse-item" href="@Url.Action("MyTickets", "Tickets")">My Tickets</a>}
                        <a class="collapse-item" href="@Url.Action("MyNotifications", "TicketNotifications")">My Notifications</a>
                        @if (User.IsInRole("Developer"))
                        {
                            <a class="collapse-item" href="@Url.Action("MyAssignments", "Tickets")">My Assignments</a>
                        }
                        <!--<a class="collapse-item" href="Url.Action("ChangePassword", "Manage")">Change Password</a>-->
                        <div class="collapse-divider"></div>
                        <!--<a class="collapse-item" href="404.html">404 Page</a>-->
                        <!--<a class="collapse-item" href="blank.html">Blank Page</a>-->
                    </div>
                </div>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">

                        <div class="topbar-divider d-none d-sm-block"></div>

                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <div class="a"><font color="black">@user.DisplayName</font></div>
                                <img class="img-profile rounded-circle" src="@user.AvatarUrl" />
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="@Url.Action("ChangePassword", "Manage")">
                                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>Change Password
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="@Url.Action("LogOff", "Account")">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>Logout
                                </a>
                            </div>
                        </li>
                    </ul>
                </nav>
                <!-- End of Topbar -->
                <!-- Begin Page Content -->

                <h2 class="text-center">@Model.Title</h2>

                @if (User.IsInRole("Submitter") || (User.IsInRole("Developer") || (User.IsInRole("Project Manager"))))
                {
                    <h5 class="text-right">@Html.ActionLink("Back to My Tickets", "MyTickets", "Tickets")</h5>
                }

                else
                {
                    <h5 class="text-right">@Html.ActionLink("Back to Tickets", "Index", "Tickets")</h5>
                }


                <div class="dropdown-menu notification-menu">
                    <div class="notification-title">
                        <span class="pull-right label label-default">@NotificationHelper.GetAllUserNotificationCount()</span>
                    </div>
                </div>

                <!--

                    <div class="text-right">
                    <a href="Url.Action("Index","TicketNotifications")" class="view-more">View All Notifications</a>
                </div>

    -->
                <a href="@Url.Action("Index", "TicketHistories")">
                    <i class="fa-fa-home" aria-hidden="true"></i>
                    <span>View All Histories</span>
                </a>

                <div class="col-md-6">
                    <section class="panel panel-warning">
                        <header class="panel-heading">
                            <div class="panel-actions">
                                <!--<a href="#" class="fa fa-caret-down"></a>-->
                                <!--<a href="#" class="fa fa-times"></a>-->
                            </div>

                            <h2 class="panel-title">Attachment(s)</h2>

                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-12">

                                        @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("TicketId", Model.Id)
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <!--<h3>Title</h3>-->
                                                    <!--<input type="text" name="Title" />-->
                                                    @Html.TextBox("AttachmentTitle", null, new { @class = "form-control cell-fill-input", placeholder = "Title" })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <!--<h3>Description</h3>-->
                                                    <!--<textarea rows="5" cols="100" type="text" name="Description" />-->
                                                    @Html.TextArea("AttachmentDescription", new { @class = "form-control cell-fill-textarea input", rows = 5, cols = 150, placeholder = "Description" })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <input type="file" name="attachment" />
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <button type="submit" class="btn btn-primary btn-sm">Add Attachment</button>
                                                </div>
                                            </div>
                                        }

                                        @foreach (var attachment in Model.TicketAttachments)
                                        {
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <img src="@ImageHelpers.GetIconPath(attachment.AttachmentUrl)" width="300" height="300" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <a target="_blank" href="@attachment.AttachmentUrl">@Path.GetFileNameWithoutExtension(attachment.AttachmentUrl)</a>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="col-md-6">@attachment.Created.ToString("MMM, d, yyyy")</div>
                                                        <div class="col-md-6">@attachment.User.FullNameWithEmail</div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            @attachment.Title
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            @attachment.Description
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!--


                                using (Html.BeginForm("Edit", "TicketAttachments", FormMethod.Post))
                                  {
                                      Html.AntiForgeryToken()

                                      <div class="row">
                                          <div class="col-md-10">
                                              <input type="file" name="attachment" />
                                              <br />
                                              <button type="submit" class="btn btn-primary btn-sm">Change Attachment</button>
                                          </div>
                                      </div>
                                  }


                                -->

                                            using (Html.BeginForm("Delete", "TicketAttachments", new { id = attachment.Id }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="submit" value="Delete" class="btn btn-danger" />
                                            }

                                            <hr />
                                        }

                                    </div>
                                </div>
                            </div>

                        </header>
                    </section>
                </div>


                <div class="col-md-6">
                    <section class="panel panel-warning">
                        <header class="panel-heading">
                            <div class="panel-actions">
                                <!--<a href="#" class="fa fa-caret-down"></a>-->
                                <!--<a href="#" class="fa fa-times"></a>-->
                            </div>

                            <h2 class="panel-title">Histories</h2>

                            <div class="panel-body">
                                <br />
                                <div class="row">
                                    <div class="col-md-12">
                                        @foreach (var history in Model.TicketHistories)
                                        {
                                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                                <tr>
                                                    <th>
                                                        Ticket
                                                    </th>
                                                    <th>
                                                        Property
                                                    </th>
                                                    <th>
                                                        Original
                                                    </th>
                                                    <th>
                                                        New
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        @history.TicketId <!--Html.DisplayFor(modelItem => item.Title)-->
                                                    </td>
                                                    <td>
                                                        @history.PropertyName<!--Html.DisplayFor(modelItem => item.Description)-->
                                                    </td>
                                                    <td>
                                                        @history.OldValue<!--Html.DisplayFor(modelItem => item.Created)-->
                                                    </td>
                                                    @if (history.NewValue != null)
                                                    {
                                                        <td>
                                                            @history.NewValue
                                                        </td>
                                                    }
                                                </tr>
                                            </table>

                                            <!--
                                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="row">
                                            <div class="col-md-12">
                                                history.TicketId
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                history.PropertyName
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                history.OldValue
                                            </div>
                                        </div>
                                        if (history.NewValue != null)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    history.NewValue
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                                    -->
                                        }
                                    </div>
                                </div>
                            </div>
                        </header>
                    </section>
                </div>

                    <div class="col-md-12">
                        @*Conditionally render the Add Comment form*@
                        @if (User.IsInRole("Administrator"))
                        {
                            @*Create a form to collect the Comment from the logged in user*@
                            using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Id)

                                <textarea name="CommentBody" placeholder="Add Comment..." rows="5" cols="50"></textarea>

                                <button class="btn btn-primary" type="submit">Add</button>
                            }

                        }

                        @if (User.IsInRole("Project Manager") && ticketHelper.IsTicketForProject(Model.Id, Model.ProjectId))
                        {
                            @*Create a form to collect the Comment from the logged in user*@
                            using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Id)

                                <textarea name="CommentBody" placeholder="Add Comment..." rows="5" cols="50"></textarea>

                                <button class="btn btn-primary" type="submit">Add</button>
                            }

                        }

                        @if (User.IsInRole("Developer") && ticketHelper.IsTicketAssigned(Model.AssignedToUserId))
                        {
                            @*Create a form to collect the Comment from the logged in user*@
                            using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Id)

                                <textarea name="CommentBody" placeholder="Add Comment..." rows="5" cols="50"></textarea>

                                <button class="btn btn-primary" type="submit">Add</button>
                            }
                        }

                        @if (User.IsInRole("Submitter") && ticketHelper.IsSubmitterTicket(Model.OwnerUserId))
                        {
                            @*Create a form to collect the Comment from the logged in user*@
                            using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Id)

                                <textarea name="CommentBody" placeholder="Add Comment..." rows="5" cols="50"></textarea>

                                <button class="btn btn-primary" type="submit">Add</button>
                            }
                        }

                        @*Displaying the comments associated with the Ticket*@
                    </div>

            </div>
                    
                <a class="scroll-to-top rounded" href="#page-top">
                    <i class="fas fa-angle-up"></i>
                </a>

                <hr />

                <section>
                    <div class="row">
                        <div class="col-md-12 text-center h3">
                            Comment Section
                        </div>
                    </div>
                </section>

                <div class="row">
                    <div class="col-md-12 text-center h4">
                        @{
                            var count = Model.TicketComments.Count();
                            var word = count == 1 ? "comments" : "comments";
                        }
                        (@count @word...)
                    </div>
                </div>

                <br />

                <div class="panel panel-default">
                    <div class="panel-body">
                        @foreach (var ticketComment in Model.TicketComments.OrderByDescending(c => c.Created))
                        {
                            <hr />
                            <div class="row">
                                <!--Now that have an instance of the db, we could pull the current user from it. See below:-->
                                Posted by @user.DisplayName on @ticketComment.Created.ToString("MMMM d, yyyy")
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    @ticketComment.CommentBody
                                </div>
                            </div>

                            <hr />

                            <!--
                         using (Html.BeginForm("Edit", "TicketComments", FormMethod.Post))
                     {
                         Html.AntiForgeryToken()
                         Html.HiddenFor(model => model.Id)
                         Html.HiddenFor(model => ticketComment.AuthorId)
                         Html.HiddenFor(model => ticketComment.Created)
                        Html.HiddenFor(model => ticketComment.TicketId)
                         <textarea name="commentBody">ticketComment.CommentBody</textarea>
                         <button class="btn btn-primary" type="submit">Edit</button>
                     }



                -->

                            using (Html.BeginForm("Delete", "TicketComments", new { id = ticketComment.Id }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            }

                        }
                    </div>
                </div>

                <hr />

                <!-- Bootstrap core JavaScript-->
                <script src="~/vendor/jquery/jquery.min.js"></script>
                <script src="~/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

                <!-- Core plugin JavaScript-->
                <script src="~/vendor/jquery-easing/jquery.easing.min.js"></script>

                <!-- Custom scripts for all pages-->
                <script src="~/js/sb-admin-2.min.js"></script>

                <!-- Page level plugins -->
                <script src="~/vendor/datatables/jquery.dataTables.min.js"></script>
                <script src="~/vendor/datatables/dataTables.bootstrap4.min.js"></script>

                <!-- Page level custom scripts -->
                <script src="~/js/demo/datatables-demo.js"></script>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
